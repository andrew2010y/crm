/*
 * 文件名：LessonController.java
 * 版权：时代智囊
 * 描述：〈描述〉
 * 修改人：武海之
 * 修改时间：2016年7月18日
 * 修改内容：新增
 * 修改人：〈武海之〉
 * 修改时间：YYYY-MM-DD
 * 修改单号：〈修改单号〉
 * 修改内容：〈修改内容〉
 */
package com.sdzn.fuzhuxian.api.controller.teach;

import com.sdzn.fuzhuxian.api.controller.BaseController;
import com.sdzn.fuzhuxian.api.controller.JsonResultBuilder;
import com.sdzn.fuzhuxian.api.controller.Status;
import com.sdzn.fuzhuxian.api.domain.model.teach.Lesson;
import com.sdzn.fuzhuxian.api.service.teach.LessonService;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.HashMap;
import java.util.List;

/**
 * 
 * LessonController 教师教案信息
 * 
 * <p>
 * detailed comment
 * @author 武海之 2016年7月20日
 * @see
 * @since 1.0
 */
@Controller
@RequestMapping("/teach/lesson")
public class LessonController extends BaseController {

    @Autowired
    private LessonService service;

    private static final int FAIL = 0;

    /**
     * 获取教师教案信息列表
     * @param request
     * @param response
     */
    @RequestMapping(value = "/list")
    public void list(HttpServletRequest request, HttpServletResponse response) {

        resultBuilder = new JsonResultBuilder();

        HashMap<String, Object> params = new HashMap<>();

        params.put("teacherId", 1);
        params.put("start", 0);
        params.put("size", SIZE);

        List<Lesson> list = service.list(params);

        doResponse(request, response, list);
    }

    /**
     * 新增教师教案信息
     * @param lesson
     * @param request
     * @param response
     */
    @RequestMapping(value = "/save")
    public void insert(Lesson lesson, HttpServletRequest request,
            HttpServletResponse response) {

        resultBuilder = new JsonResultBuilder();

        if (!validate(lesson)) {
            resultBuilder.setStatus(Status.PARSE_PARAMETERS_ERROR);
        }
        else {
            try {
                service.insert(lesson);
            }
            catch (Exception e) {
                resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
                logger.error(e.toString());
            }
        }
        doResponse(request, response);
    }

    /**
     * 修改教师教案信息
     * @param request
     * @param response
     * @param lesson
     */
    @RequestMapping(value = "/update")
    public void update(HttpServletRequest request, HttpServletResponse response,
            Lesson lesson) {

        resultBuilder = new JsonResultBuilder();

        int row = service.updateById(lesson);
        if (row == FAIL) {
            resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
        }

        doResponse(request, response);
    }

    /**
     * 删除教师教案信息
     * @param id
     * @param request
     * @param response
     */
    @RequestMapping(value = "/delete")
    public void delete(@RequestParam(value = "id") Integer id,
            HttpServletRequest request, HttpServletResponse response) {

        resultBuilder = new JsonResultBuilder();

        int row = service.deleteById(id);
        if (row == FAIL) {

            resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
        }

        doResponse(request, response);
    }

    /**
     * 验证数据是否为空
     *
     * @return
     */
    private boolean validate(Lesson lesson) {
        if (lesson == null) {
            return false;
        }
        if (StringUtils.isBlank(lesson.getTeacherName())) {
            return false;
        }
        if (StringUtils.isBlank(lesson.getChapterName())) {
            return false;
        }
        if (lesson.getTeacherId() == null) {
            return false;
        }
        if (lesson.getChapterId() == null) {
            return false;
        }

        return true;
    }
}
