<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdzn.fuzhuxian.api.domain.dao.menu.MenuDao">
  <resultMap id="baseResultMap" type="com.sdzn.fuzhuxian.api.domain.model.menu.Menu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_account_id" jdbcType="INTEGER" property="createAccountId" />
    <result column="create_time url create_time" jdbcType="TIMESTAMP" property="createTime url createTime" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="has_child" jdbcType="BIT" property="hasChild" />
    <result column="available" jdbcType="BIT" property="available" />
    <result column="path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  
  <sql id="baseColumnList">
    id, name, create_account_id, create_time,
    url, parent_id, has_child, available, path
  </sql>
  
  <select id="getByRoleId" parameterType="int" resultMap="baseResultMap">
    select t.* 
    from teach_user_menu t, teach_user_role_to_menu r
    where t.id=r.menu_id and r.role_id = #{roleId,jdbcType=INTEGER}
    order by t.salt DESC
  </select>
  
  <insert id="insert" parameterType="com.sdzn.fuzhuxian.api.domain.model.menu.Menu">
    insert into teach_user_menu (id, name, create_account_id, 
		create_time, url, parent_id, has_child, available, path)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createAccountId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{url,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{hasChild,jdbcType=BIT}, #{available,jdbcType=BIT}, #{path,jdbcType=VARCHAR})
  </insert>
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="baseResultMap">
    select 
    <include refid="baseColumnList" />
    from teach_user_menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teach_user_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdzn.fuzhuxian.api.domain.model.menu.Menu">
    delete from teach_user_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insertSelective" parameterType="com.sdzn.fuzhuxian.api.domain.model.menu.Menu">
   
    insert into teach_user_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createAccountId != null">
        create_account_id,
      </if>
      <if test="createTime url createTime != null">
        create_time,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="hasChild != null">
        has_child,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createAccountId != null">
        #{createAccountId,jdbcType=INTEGER},
      </if>
      <if test="createTime url createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="hasChild != null">
        #{hasChild,jdbcType=BIT},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdzn.fuzhuxian.api.domain.model.menu.Menu" resultType="java.lang.Integer">
    
    select count(*) from teach_user_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    
    update teach_user_menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createAccountId != null">
        create_account_id = #{record.createAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime url createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.hasChild != null">
        has_child = #{record.hasChild,jdbcType=BIT},
      </if>
      <if test="record.available != null">
        available = #{record.available,jdbcType=BIT},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    
    update teach_user_menu
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      create_account_id = #{record.createAccountId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      url = #{record.url,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      has_child = #{record.hasChild,jdbcType=BIT},
      available = #{record.available,jdbcType=BIT},
      path = #{record.path,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdzn.fuzhuxian.api.domain.model.menu.Menu">
   
    update teach_user_menu
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createAccountId != null">
        create_account_id = #{createAccountId,jdbcType=INTEGER},
      </if>
      <if test="createTime url createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="hasChild != null">
        has_child = #{hasChild,jdbcType=BIT},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdzn.fuzhuxian.api.domain.model.menu.Menu">
    update teach_user_menu
    set name = #{name,jdbcType=VARCHAR},
      create_account_id = #{createAccountId,jdbcType=INTEGER},
   	  create_time = #{createTime,jdbcType=TIMESTAMP},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      has_child = #{hasChild,jdbcType=BIT},
      available = #{available,jdbcType=BIT},
      path = #{path,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>