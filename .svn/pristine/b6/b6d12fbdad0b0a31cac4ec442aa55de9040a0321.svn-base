/*
 * 文件名：LessonController.java
 * 版权：时代智囊
 * 描述：〈描述〉
 * 修改人：武海之
 * 修改时间：2016年7月18日
 * 修改内容：新增
 * 修改人：〈武海之〉
 * 修改时间：YYYY-MM-DD
 * 修改单号：〈修改单号〉
 * 修改内容：〈修改内容〉
 */
package com.sdzn.fuzhuxian.api.controller.teach;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.sdzn.fuzhuxian.api.controller.BaseController;
import com.sdzn.fuzhuxian.api.controller.JsonResultBuilder;
import com.sdzn.fuzhuxian.api.controller.Status;
import com.sdzn.fuzhuxian.api.domain.model.network.NetWork;
import com.sdzn.fuzhuxian.api.domain.model.student.SchoolStudentGo;
import com.sdzn.fuzhuxian.api.domain.model.teach.Lesson;
import com.sdzn.fuzhuxian.api.domain.model.teach.LessonResource;
import com.sdzn.fuzhuxian.api.service.teach.LessonService;

@Controller
@RequestMapping("/teach/lesson")
public class LessonController extends BaseController {
    @Autowired
    private LessonService service;

    private static final int FAIL = 0;

    @RequestMapping(value = "/list")
    public void getLesson(HttpServletRequest request,
            HttpServletResponse response) {
        resultBuilder = new JsonResultBuilder();
        List<Lesson> list = service.seleteAll();
        doResponse(request, response, list);
    }

    @RequestMapping(value = "/save", method = RequestMethod.POST)
    public void insert(Lesson lesson, HttpServletRequest request,
            HttpServletResponse response) {
        resultBuilder = new JsonResultBuilder();
        if (!validate(lesson)) {

            resultBuilder.setStatus(Status.PARSE_PARAMETERS_ERROR);

        }
        else {
            try {
                service.insert(lesson);
            }
            catch (Exception e) {
                resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
                logger.error(e.toString());
            }
        }
        doResponse(request, response);
    }

    @RequestMapping(value = "/update", method = RequestMethod.POST)
    public void update(HttpServletRequest request, HttpServletResponse response,
            Lesson lesson) {
        resultBuilder = new JsonResultBuilder();
        int row = service.updateById(lesson);
        if (row == FAIL) {
            resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
        }

        doResponse(request, response);
    }

    @RequestMapping(value = "/delete", method = RequestMethod.GET)
    public void delete(Integer id, HttpServletRequest request,
            HttpServletResponse response) {
        resultBuilder = new JsonResultBuilder();
        int row = service.deleteById(id);
        if (row == FAIL) {

            resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
        }

        doResponse(request, response);
    }

    /**
     * 验证数据是否为空
     * @param Lesson
     * @return
     */
    private boolean validate(Lesson Lesson) {
        if (Lesson == null) {
            return false;
        }
        if (StringUtils.isBlank(Lesson.getTeacherName())) {
            return false;
        }
        if (StringUtils.isBlank(Lesson.getChapterName())) {
            return false;
        }
        if (Lesson.getTeacherId() == null) {
            return false;
        }
        if (Lesson.getChapterId() == null) {
            return false;
        }
        if (Lesson.getReadTime() == null) {
            return false;
        }

        return true;
    }
}
