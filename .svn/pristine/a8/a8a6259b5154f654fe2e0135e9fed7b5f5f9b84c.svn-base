/*
 * 文件名：LessonResourceController.java
 * 版权：时代智囊
 * 描述：教师教案信息资源
 * 修改人：武海之
 * 修改时间：2016年7月18日
 * 修改内容：新增
 * 修改人：〈武海之〉
 * 修改时间：YYYY-MM-DD
 * 修改单号：〈修改单号〉
 * 修改内容：〈修改内容〉
 */
package com.sdzn.fuzhuxian.api.controller.teach;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.sdzn.fuzhuxian.api.controller.BaseController;
import com.sdzn.fuzhuxian.api.controller.JsonResultBuilder;
import com.sdzn.fuzhuxian.api.controller.Status;
import com.sdzn.fuzhuxian.api.domain.model.teach.LessonResource;
import com.sdzn.fuzhuxian.api.domain.model.user.SchoolStudent;
import com.sdzn.fuzhuxian.api.service.teach.LessonResourceService;

@Controller
@RequestMapping("/teach/lessonresource")
public class LessonResourceController extends BaseController {
    @Autowired
    private LessonResourceService resourceService;

    private static final int FAIL = 0;

    @RequestMapping(value = "/list")
    public void getLesson(HttpServletRequest request,
            HttpServletResponse response) {
        resultBuilder = new JsonResultBuilder();
        HashMap<String, Object> params = new HashMap<>();
        params.put("lessonId", 1);
        params.put("start", 0);
        params.put("size", SIZE);
        List<LessonResource> list = resourceService.list(params);
        doResponse(request, response, list);
    }

    @RequestMapping("/sava")
    public void insert(HttpServletRequest request, HttpServletResponse response,
            LessonResource resource) {

        resultBuilder = new JsonResultBuilder();
        if (!validate(resource)) {
            resultBuilder.setStatus(Status.PARSE_PARAMETERS_ERROR);
        }
        else {
            int row = resourceService.insert(resource);
            if (row == FAIL) {
                resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
            }
        }
        doResponse(request, response);

    }

    @RequestMapping("/update")
    public void update(HttpServletRequest request, HttpServletResponse response,
            LessonResource resource) {
        resultBuilder = new JsonResultBuilder();
        int row = resourceService.updateById(resource);
        if (row == FAIL) {
            resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
        }
        doResponse(request, response);

    }

    @RequestMapping(value = "/delete")
    public void delete(Integer id, HttpServletRequest request,
            HttpServletResponse response) {
        resultBuilder = new JsonResultBuilder();
        if (id == null) {
            resultBuilder.setStatus(Status.VALIDATE_PARAMETERS_ERROR);
        }
        else {
            int row = resourceService.deleteById(id);
            if (row == FAIL) {
                resultBuilder.setStatus(Status.DB_OPERATION_ERROR);
            }
        }

        doResponse(request, response);
    }

    /**
     * 验证数据是否为空
     * @param resource
     * @return
     */
    private boolean validate(LessonResource resource) {
        if (resource == null) {
            return false;
        }
        if (StringUtils.isBlank(resource.getName())) {
            return false;
        }
        if (StringUtils.isBlank(resource.getSuffix())) {
            return false;
        }
        if (StringUtils.isBlank(resource.getUrl())) {
            return false;
        }
        if (resource.getType() == null) {
            return false;
        }
        if (resource.getLessonId() == null) {
            return false;
        }
        if (resource.getStage() == null) {
            return false;
        }
        return true;
    }
}
