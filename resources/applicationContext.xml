<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

<!-- 	<context:component-scan base-package="com.bigaka.crm">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan> -->
	<context:component-scan base-package="com.bigaka.crm.service.assist" />
	<context:component-scan base-package="com.bigaka.crm.customer.dao" />
	<context:component-scan base-package="com.bigaka.crm.common.service" />
	<context:component-scan base-package="com.bigaka.crm.customer.service" />
	<context:component-scan base-package="com.bigaka.crm.customer.action" />
	 
	<!-- 导入properties @Value("#{config[propertiesName]}") -->
	<bean id="config" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="locations">
	   <list>
	    <value>classpath:config.properties</value>
	   </list>
	  </property>
	 </bean>

	<context:property-placeholder location="classpath:setting.properties" />

	<!-- 配置数据源 -->
	<bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
				<property name="driverClassName" value="${jdbc.driverClassName}" />
				<property name="jdbcUrl" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
				
				<!-- <property name="cachePrepStmts" value="${jdbc.cachePrepStmts}" />
				<property name="prepStmtCacheSize" value="${jdbc.prepStmtCacheSize}" />
				<property name="prepStmtCacheSqlLimit" value="${jdbc.prepStmtCacheSqlLimit}" /> -->
				
				<property name="maximumPoolSize" value="${jdbc.maxPoolSize}" />
				<property name="idleTimeout" value="${jdbc.maxIdleTime}" />
				<property name="maxLifetime" value="${jdbc.maxLifetime}" />
				<property name="connectionTimeout" value="${jdbc.connectionTimeout}" />
				<property name="validationTimeout" value="${jdbc.validationTimeout}" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- ref: com.bigaka.crm.service.assist.jdbcTemplate.java -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="hikariDataSource"></property>
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="hikariDataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="send*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="is*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceOperation" expression="execution(* com.bigaka.crm.*.service..*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

	<!-- <import resource="classpath:config/*.xml" /> -->
	
	
	<!-- 	<bean id="comboPooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="maxStatements" value="${jdbc.maxStatements}" />
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${jdbc.testConnectionOnCheckout}" />
	</bean> -->
	
</beans>
